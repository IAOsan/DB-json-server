{
    "bugs": [
        {
            "id": 0,
            "description": "bug1"
        },
        {
            "id": 1,
            "description": "bug2",
            "resolved": true
        },
        {
            "id": 2,
            "description": "bug3"
        },
        {
            "id": 3,
            "description": "bug4"
        }
    ],
    "todos": [],
    "questions": [
        {
            "id": 1,
            "question": "What is React?",
            "options": [
                "A server-side framework",
                "A database management system",
                "A JavaScript library for building user interfaces",
                "A CSS preprocessor",
                "A version control system"
            ],
            "correct_answer": 2,
            "points": 5
        },
        {
            "id": 2,
            "question": "What is a prop in React?",
            "options": [
                "A way to pass data to components",
                "A method in React",
                "A CSS property",
                "A type of component",
                "A JavaScript function"
            ],
            "correct_answer": 0,
            "points": 5
        },
        {
            "id": 3,
            "question": "What is the virtual DOM?",
            "options": [
                "A copy of the real DOM that is kept in memory",
                "A new type of DOM",
                "A CSS framework",
                "A JavaScript library",
                "A database management system"
            ],
            "correct_answer": 0,
            "points": 20
        },
        {
            "id": 4,
            "question": "Which is the most popular JavaScript framework?",
            "options": [
                "Angular",
                "React",
                "Svelte",
                "Vue"
            ],
            "correct_answer": 1,
            "points": 10
        },
        {
            "id": 5,
            "question": "Which company invented React?",
            "options": [
                "Google",
                "Apple",
                "Netflix",
                "Facebook"
            ],
            "correct_answer": 3,
            "points": 10
        },
        {
            "id": 6,
            "question": "What's the fundamental building block of React apps?",
            "options": [
                "Components",
                "Blocks",
                "Elements",
                "Effects"
            ],
            "correct_answer": 0,
            "points": 10
        },
        {
            "id": 7,
            "question": "What's the name of the syntax we use to describe the UI in React components?",
            "options": [
                "FBJ",
                "Babel",
                "JSX",
                "ES2015"
            ],
            "correct_answer": 2,
            "points": 10
        },
        {
            "id": 8,
            "question": "What is JSX?",
            "options": [
                "A type of JavaScript",
                "A syntax extension for JavaScript",
                "A CSS framework",
                "A database query language",
                "A version control system"
            ],
            "correct_answer": 1,
            "points": 5
        },
        {
            "id": 9,
            "question": "How does data flow naturally in React apps?",
            "options": [
                "From parents to children",
                "From children to parents",
                "Both ways",
                "The developers decides"
            ],
            "correct_answer": 0,
            "points": 10
        },
        {
            "id": 10,
            "question": "What is a state in React?",
            "options": [
                "A permanent storage",
                "A way to store data in components",
                "A CSS property",
                "A method in React",
                "A type of component"
            ],
            "correct_answer": 1,
            "points": 15
        },
        {
            "id": 11,
            "question": "How to pass data into a child component?",
            "options": [
                "State",
                "Props",
                "PropTypes",
                "Parameters"
            ],
            "correct_answer": 1,
            "points": 10
        },
        {
            "id": 12,
            "question": "When to use derived state?",
            "options": [
                "Whenever the state should not trigger a re-render",
                "Whenever the state can be synchronized with an effect",
                "Whenever the state should be accessible to all components",
                "Whenever the state can be computed from another state variable"
            ],
            "correct_answer": 3,
            "points": 30
        },
        {
            "id": 13,
            "question": "What triggers a UI re-render in React?",
            "options": [
                "Running an effect",
                "Passing props",
                "Updating state",
                "Adding event listeners to DOM elements"
            ],
            "correct_answer": 2,
            "points": 20
        },
        {
            "id": 14,
            "question": "When do we directly \"touch\" the DOM in React?",
            "options": [
                "When we need to listen to an event",
                "When we need to change the UI",
                "When we need to add styles",
                "Almost never"
            ],
            "correct_answer": 3,
            "points": 20
        },
        {
            "id": 15,
            "question": "In what situation do we use a callback to update state?",
            "options": [
                "When updating the state will be slow",
                "When the updated state is very data-intensive",
                "When the state update should happen faster",
                "When the new state depends on the previous state"
            ],
            "correct_answer": 3,
            "points": 30
        },
        {
            "id": 16,
            "question": "If we pass a function to useState, when will that function be called?",
            "options": [
                "On each re-render",
                "Each time we update the state",
                "Only on the initial render",
                "The first time we update the state"
            ],
            "correct_answer": 2,
            "points": 30
        },
        {
            "id": 17,
            "question": "Which hook to use for an API request on the component's initial render?",
            "options": [
                "useState",
                "useEffect",
                "useRef",
                "useReducer"
            ],
            "correct_answer": 1,
            "points": 10
        },
        {
            "id": 18,
            "question": "Which variables should go into the useEffect dependency array?",
            "options": [
                "Usually none",
                "All our state variables",
                "All state and props referenced in the effect",
                "All variables needed for clean up"
            ],
            "correct_answer": 2,
            "points": 30
        },
        {
            "id": 19,
            "question": "An effect will always run on the initial render.",
            "options": [
                "True",
                "It depends on the dependency array",
                "False",
                "In depends on the code in the effect"
            ],
            "correct_answer": 0,
            "points": 30
        },
        {
            "id": 20,
            "question": "When will an effect run if it doesn't have a dependency array?",
            "options": [
                "Only when the component mounts",
                "Only when the component unmounts",
                "The first time the component re-renders",
                "Each time the component is re-rendered"
            ],
            "correct_answer": 3,
            "points": 20
        },
        {
            "id": 21,
            "question": "What is the use of useState hook in React?",
            "options": [
                "To manage state in functional components",
                "To manage props in functional components",
                "To manage events in functional components",
                "To manage context in functional components",
                "To manage lifecycle methods in functional components"
            ],
            "correct_answer": 0,
            "points": 5
        },
        {
            "id": 22,
            "question": "What is the use of useEffect hook in React?",
            "options": [
                "To manage state in functional components",
                "To manage props in functional components",
                "To manage side effects in functional components",
                "To manage context in functional components",
                "To manage lifecycle methods in functional components"
            ],
            "correct_answer": 2,
            "points": 5
        },
        {
            "id": 23,
            "question": "What is the purpose of React Router?",
            "options": [
                "To manage state",
                "To manage side effects",
                "To manage routing in React applications",
                "To manage context",
                "To manage lifecycle methods"
            ],
            "correct_answer": 2,
            "points": 5
        },
        {
            "id": 24,
            "question": "What is the purpose of React.memo?",
            "options": [
                "To memoize functions",
                "To memoize components",
                "To memoize state",
                "To memoize props",
                "To memoize context"
            ],
            "correct_answer": 1,
            "points": 5
        },
        {
            "id": 25,
            "question": "What is the purpose of useRef hook in React?",
            "options": [
                "To manage state in functional components",
                "To manage props in functional components",
                "To manage context in functional components",
                "To manage events in functional components",
                "To access DOM elements directly in functional components"
            ],
            "correct_answer": 4,
            "points": 5
        },
        {
            "id": 26,
            "question": "What is the purpose of useCallback hook in React?",
            "options": [
                "To manage state in functional components",
                "To manage props in functional components",
                "To manage context in functional components",
                "To memoize functions in functional components",
                "To manage lifecycle methods in functional components"
            ],
            "correct_answer": 3,
            "points": 5
        },
        {
            "id": 27,
            "question": "What is the purpose of React.Fragment?",
            "options": [
                "To manage state",
                "To manage props",
                "To manage context",
                "To group multiple elements without adding extra nodes to the DOM",
                "To manage lifecycle methods"
            ],
            "correct_answer": 3,
            "points": 8
        },
        {
            "id": 28,
            "question": "What is the purpose of React.StrictMode?",
            "options": [
                "To manage state",
                "To manage props",
                "To manage context",
                "To highlight potential problems in an application",
                "To manage lifecycle methods"
            ],
            "correct_answer": 3,
            "points": 10
        },
        {
            "id": 29,
            "question": "What is the purpose of React.lazy?",
            "options": [
                "To create lazy components",
                "To create lazy state",
                "To create lazy props",
                "To load components lazily",
                "To manage lifecycle methods"
            ],
            "correct_answer": 3,
            "points": 12
        },
        {
            "id": 30,
            "question": "How do you create a higher-order component in React?",
            "options": [
                "By using a function that takes a component and returns a new component",
                "By using a class that extends React.Component",
                "By using a function that returns a React element",
                "By using a function that takes props and returns a React element",
                "By using a class that extends React.PureComponent"
            ],
            "correct_answer": 0,
            "points": 5
        }
    ],
    "cities": [
        {
            "latitude": 48.8566,
            "longitude": 2.3522,
            "continentCode": "EU",
            "countryName": "France",
            "countryCode": "FR",
            "name": "Paris",
            "visitDate": "2023-04-12T10:00:00Z",
            "notes": "Visited the Eiffel Tower and Louvre Museum."
        },
        {
            "latitude": 34.0522,
            "longitude": -118.2437,
            "continentCode": "NA",
            "countryName": "United States",
            "countryCode": "US",
            "name": "Los Angeles",
            "visitDate": "2024-06-22T15:30:00Z",
            "notes": "Enjoyed a day at the beaches and Hollywood."
        },
        {
            "latitude": -33.8688,
            "longitude": 151.2093,
            "continentCode": "OC",
            "countryName": "Australia",
            "countryCode": "AU",
            "name": "Sydney",
            "visitDate": "2025-01-10T08:45:00Z",
            "notes": "Climbed the Sydney Harbour Bridge and visited the Opera House."
        }
    ],
    "users": [
        {
            "name": "goku",
            "email": "goku@mail.com",
            "password": "goku1234"
        },
        {
            "name": "vegeta",
            "email": "vegeta@mail.com",
            "password": "vegeta1234"
        }
    ]
}
